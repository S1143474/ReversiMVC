@use '../abstracts/colors' as clr;
@import '../abstracts/mixins';

.input-group {
    width: 100%;

    @include for-tablet-landscape-up {
        margin: 1.563rem 0;
    }
    
    position: relative;
   
    input {
        width: 100%;

        padding: 1rem 0 1rem 1rem;

        color: clr.$text;
        background-color: clr.$background;

        font-size: var(--fs-400);

        outline: 0;
        border: none;

        border-radius: .175rem;  
        
        @include for-phone-and-tablet-small {
            padding: .775rem 0 .775rem .775rem;
        }

       
        &[type="password"] {

            &:focus{
                
            }
        }
    }

    .show__password__icon {
        position: absolute;
        top: 1rem;
        right: 1rem;

        @include for-phone-and-tablet-small {
            top: .775rem;
            right: .775rem;
        }

        cursor: pointer;
        display: block;

        @include user-select;
    }

    .hide__password__icon {
        position: absolute;
        top: 1rem;
        right: 1rem;

        @include for-phone-and-tablet-small {
            top: .775rem;
            right: .775rem;
        }

        cursor: pointer;
        display: none;

        @include user-select;

    }


    label {
        position: absolute;

        top: calc(50% - .75rem);
        
        transform: translateY(calc(-50% - .3rem));
        left: 1rem;
        
        font-size: var(--fs-400);
        pointer-events: none;

        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        cursor: text;

        display: flex;
        align-items: center;
        justify-content: center;

        transition: 
            top .3s ease,
            left .3s ease,
            color .3s ease,
            font-size .3s ease;

        .material-icons,
        .material-svg {
            font-size: 24px;
            display: flex;
            justify-content: center;
            align-items: center;
            width: 1.5rem;
            height: 1.5rem;
            font-size: inherit;
            padding-top: .1rem;
            margin-right: .375rem;
        }
    }

    input:valid + label,
    input:not(:placeholder-shown):not(:focus):invalid + label,
    input:focus + label {
        position: absolute;
        top: 0%;
        left: 5%;
        color: clr.$blue;
        font-size: var(--fs-400);
        transform: translateY(-50%);
    }

    input:disabled + label {
        position: absolute;
        top: 0%;
        left: 5%;
        color: clr.$disabled;
        font-size: var(--fs-400);
        transform: translateY(-50%);
    }

    input:valid + .material-svg,
    input:disabled + .material-svg,
    input:not(:placeholder-shown):not(:focus):invalid + .material-svg,
    input:focus + .material-svg,
    input:valid + .material-icons,
    input:disabled + .material-icons,
    input:not(:placeholder-shown):not(:focus):invalid + .material-icons,
    input:focus + .material-icons {
        position: absolute;
        width: 1.875rem;
        height: 1.875rem;
        top: 0%;
        left: 5%;
        color: clr.$blue;
        font-size: var(--fs-500);
        transform: translateY(-50%);
    }
    .password__strength__checker {

        position: absolute;

        top: -285%;
        @include for-phone-and-tablet-small {
            top: -345%;
        }

        @include for-phone-only {
            top: -445%;
        }
        
        left: 50%;
        transform: translate(-50%);

        z-index: 12;
        display: none;
        flex-direction: column;

        padding: 1em 1.3em;
        width: 90%;

        background-color: clr.$background;
        border-radius: .5em;
        box-shadow: 0 0 .2em rgba(0, 0, 0, .4);

        &::after {
            content: '';
            position: absolute;
            top: calc(95% - 4px);
            right: 10%;

            transform: rotate(45deg);

            width: 24px;
            height: 24px;
            background-color: clr.$background;
            border-radius: .2em;

            z-index: 10;
            box-shadow: .1em .1em .1em rgba(0, 0, 0, .4);
        }

        h3 {
            margin-bottom: 1em;
            color: clr.$text;
        }

        ul {
            list-style: none;

            li {
                display: flex;

                &.included {
                    color: clr.$green;
                }

                &.not-included {
                    color: clr.$red;
                }

                span {
                    @include user-select;
                    margin-right: .556em;
                }
            }
        }
    }
    .foot__note {
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        user-select: none;
        -webkit-user-select: none;
        -moz-user-select: none;
        margin-top: .56rem;

       

        > span:empty {
            height: 1.5rem;
            // background-color: red;
        }

        > span > span {
            color: clr.$red;
            animation: fadeIn .67s ease;
        }

        @keyframes fadeIn {
            0% {
                opacity: 0;
            }

            100% {
                opacity: 1;
            }
        }

        a {
            
            outline: none;
            display: flex;
            justify-content: flex-end;
            align-items: center;

            color: clr.$disabled;
            
            svg {
                width: 1.5rem;
                height: 1.5rem;
                size: 1rem;
            }

            
        }
    }

    // input:valid,
    // input:not(:placeholder-shown):not(:focus):invalid,
    // input:focus {
    //     outline: 1px solid clr.$blue;
    // }

    // &::after,
    // &::before {
    //     content: "";
    //     display: inline-block;
    //     width: 0;
    //     height: 0;
    //     position: absolute;
    //     border-radius: .175rem;
    //     border-bottom: 1px solid red;
    // }

    // &::before {
    //     left: 0;
    //     bottom: 0;
    //     border-bottom: 1px solid red;
    //     border-right: 1px solid red;
    // }

    // &::after {
    //     right: 0;
    //     top: 0;
    //     border-top: 1px solid red;
    //     border-left: 1px solid red;
    // }

    // input:valid ~ &:before,
    // input:not(:placeholder-shown):not(:focus):invalid ~ &:before,
    // input:focus ~ &:before,
    // input:valid ~ &:after,
    // input:not(:placeholder-shown):not(:focus):invalid ~ &:after,
    // input:focus ~ &:after {
    //     width: calc(100% - .175rem);
    //     height: calc(100% - .175rem);
    //     border-width: .175rem;
    // }

    // input:valid ~ &:before,
    // input:not(:placeholder-shown):not(:focus):invalid ~ &:before,
    // input:focus ~ &:before {
    //     transition: 
    //         width 0.3s ease,
    //         height 0.3s ease 0.3s;
    // }

    // input:valid ~ &:after,
    // input:not(:placeholder-shown):not(:focus):invalid ~ &:after,
    // input:focus ~ &:after {
    //     transition: 
    //         border-width 0s ease 0.6s,
    //         width 0.3s ease 0.6s,
    //         height 0.3s ease 0.9s;
    // }

    // input:valid + &:after,
    // input:not(:placeholder-shown):not(:focus):invalid + &:after,
    // input:focus + &:after {
    //     outline: 1px solid clr.$blue;
    // }

    // input:valid + &:after,
    // input:not(:placeholder-shown):not(:focus):invalid + &:after,
    // input:focus + &:after {
    //     content: ""; 
    //     position: absolute;/* This is necessary for the pseudo element to work. */ 
    //     display: block; /* This will put the pseudo element on its own line. */
    //     // margin: 0 auto; /* This will center the border. */
    //     // width: 50%; /* Change this to whatever width you want. */
    //     border-bottom: 4px solid red;
    //     animation: border 1s ease-in-out;
    //     overflow: hidden;
    // }

    // &:after {
    //     content: ""; 
    //     position: absolute;/* This is necessary for the pseudo element to work. */ 
    //     display: block; /* This will put the pseudo element on its own line. */
    //     // margin: 0 auto; /* This will center the border. */
    //     // width: 50%; /* Change this to whatever width you want. */
    //     border-bottom: 4px solid red;
    //     // animation: border 1s infinite;
    //     overflow: hidden;

    //     /* This creates the border. Replace black with whatever color you want. */
    // }

    // @keyframes border {
    //     0% {
    //         left: 0;
    //         width: 10%;
    //     }

    //     100% {
    //         left: 100%;
    //         width: 0%;
    //     }
    // }

    

    // @keyframes border {
    //     0% {
    //         border-bottom: solid red 0%;
    //     }
    //     100% {
    //         border-bottom: solid red 100%;
    //     }
    // }
}







.custom-field {
    width: 100%;
    margin: 1.563rem 0;
    position: relative;
    font-size: var(--fs-400);
    
    // margin-bottom: 1.125rem;

    input {
        border: none;
        -webkit-appearance: none;
        -ms-appearance: none;
        -moz-appearance: none;
        appearance: none;
        background: clr.$background;

        width: 100%;
        margin: 2rem 0;
        padding: 1.125rem;
        border-radius: .2rem;
        outline: none;
        font-size: var(--fs-400);
        color: clr.$text;

    }

    input:disabled {
        color: clr.$disabled;
    }

    input:disabled ~ .placeholder {
        color: clr.$disabled;
        top: 1.953rem;
        font-size: 2.441rem;
    }
    
    .placeholder {
        position: absolute;
        left: 1.125em;
        top: calc(50% + 1.563em);
        transform: translateY(calc(-50%));

        transition:
            top 0.3s ease,
            font-size 0.3s ease,
            color 0.3s ease;
    }

    input:valid:focus + .placeholder,
    input:focus + .placeholder,
    input:valid + .placeholder {
        top: .892rem;
        font-size: var(--fs-300);
        color: clr.$blue;
    }   

    .border {
        width: 100%;
        height: calc(100% - .892rem);
        position: absolute;
        left: 0;
        top: 1.953rem;
        border-radius: .15em;
    }

    // .border::before,
    // .border::after {
    //     content: "";
    //     display: inline-block;
    //     width: 0;
    //     height: 0;
    //     position: absolute;
    //     border-radius: .15em;
    // }

    // .border::before {
    //     left: 0;
    //     bottom: 0;
    //     border-bottom: 0px solid var(--highlight-blue);
    //     border-right: 0px solid var(--highlight-blue); 
    // }

    // .border::after {
    //     right: 0;
    //     top: 0;
    //     border-top: 0px solid var(--highlight-blue);
    //     border-left: 0px solid var(--highlight-blue); 
    // }

    // input:valid ~ .border:before,
    // input:focus ~ .border:before,
    // input:valid ~ .border:after,
    // input:focus ~ .border:after {
    //     width: calc(100% - .15em);
    //     height: calc(100% - .15em);
    //     border-width: .15em;
    // }

    // input:valid ~ .border:before,
    // input:focus ~ .border:before {
    //     transition: 
    //         width 0.3s ease,
    //         height 0.3s ease 0.3s;
    // }

    // input:valid ~ .border:after,
    // input:focus ~ .border:after {
    //     transition: 
    //         border-width 0s ease 0.6s,
    //         width 0.3s ease 0.6s,
    //         height 0.3s ease 0.9s;
    // } 
}