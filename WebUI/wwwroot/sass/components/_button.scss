@use 'sass:math';
@use '../abstracts/colors' as clr;
@import '../abstracts/mixins';

$sizes: 10, 20, 30, 40, 45, 50, 60, 70, 80, 90, 100;

.btn {
    border: none;
    outline: none;

    font-family: 'Poppins', 'Ubuntu', sans-serif;
    font-weight: 600;

    border-radius: .3em;

    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.4);

    @include user-select;
    cursor: pointer;

    transition: all .3s;

    &:hover {
        transform: scale(1.03);
    }

    &:active {
        transform: scale(.991);
    }

    @each $size in $sizes {
        &.w#{$size} {
            width: #{$size}#{"%"};
            padding: #{math.div($size, 100)}#{"em"};
        }
    }

    font-size: var(--fs-400);

    &.upper {
        text-transform: uppercase;
    }

    &.outline-blue {
        outline: .1em solid clr.$blue;
        background-color: transparent;
        color: clr.$text;

        &:hover {
            transform: scale(1.03);
        }
    
        &:active {
            background-color: rgba(clr.$blue, .45);
            transform: scale(.991);
        }
    }

    &.blue {
        background-color: clr.$blue;
        color: clr.$text;
    }

    &.purple {
        background-color: clr.$purple;
        color: clr.$text;
    }

    &.outline-pink {
        outline: .1em solid clr.$pink;
        background-color: transparent;
        color: clr.$text;

        &:hover {
            transform: scale(1.03);
        }
    
        &:active {
            background-color: rgba(clr.$pink, .45);
            transform: scale(.991);
        }
    }

    &.outline-red {
        outline: .1em solid clr.$red;
        background-color: transparent;
        color: clr.$text;

        &:hover {
            transform: scale(1.03);
        }

        &:active {
            background-color: rgba(clr.$red, .45);
            transform: scale(.991);
        }
    }

    &.outline-green {
        outline: .1em solid clr.$green;
        background-color: transparent;
        color: clr.$text;

        &:hover {
            transform: scale(1.03);
        }

        &:active {
            background-color: rgba(clr.$green, .45);
            transform: scale(.991);
        }
    }

    &.outline-purple {
        outline: .1em solid clr.$purple;
        background-color: transparent;
        color: clr.$text;

        &:hover {
            transform: scale(1.03);
        }

        &:active {
            background-color: rgba(clr.$purple, .45);
            transform: scale(.991);
        }
    }

    &.outline-orange {
        outline: .1em solid clr.$orange;
        background-color: transparent;
        color: clr.$text;

        &:hover {
            transform: scale(1.03);
        }

        &:active {
            background-color: rgba(clr.$orange, .45);
            transform: scale(.991);
        }
    }

    &.pink {
        background-color: clr.$pink;
        color: clr.$text;
    }

    &.icon-btn {
        display: flex;
        align-items: center;
        justify-content: space-evenly;

        padding: .5em 1em;

        svg {
            width: 32px;
            height: 32px;
        }
    }
}

// .btn {
//     background-color: var(--highlight-blue);
//     color: white;
//     border: none;
//     outline: none;
//     padding: .6rem 1rem;
//     font-size: 1.2rem;
//     font-family: "Poppins", "Ubuntu", sans-serif;
//     box-shadow: 0px 5px 10px black;

//     transition: all .3s;
//     cursor: pointer;
//     border-radius: .2rem;

//     &:hover {
//         box-shadow: 0px .3rem .6rem -.1rem black;
//         transform: scale(1.03);
//     }

//     &:active {
//         box-shadow: 0px .1rem .2rem black;
//         transform: scale(.991);
//     }

//     &__80 {
//         width: 80%;
//     }
// }