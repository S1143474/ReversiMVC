@using System.Diagnostics
@model IEnumerable<Application.Spellen.Queries.GetSpellen.SpelDTO>
@{
    ViewData["Title"] = "Reversi";
}

@if (Model != null && Model.Count() != 0)
{
    <div id="page__content">
        <div class="open__game__list">
            @foreach (var item in Model)
            {
                <a asp-controller="Spel" asp-action="Reversi" asp-route-id="@item.token" class="game__card">
                    <h2 class="card__action__title">Play</h2>
                    <p class="game__card__description">@item.omschrijving</p>
                    <span class="game__card__from">@item.speler1Token</span>
                </a>
            }
            @{
                string[] sizes =
                {
                    "wide", "tall", "medium", "small",
                    "small", "tall", "small",
                    "tall", "small", "wide", "small",
                    "small", "wide", "wide"
                }; 
               

                Random random = new Random();
            }
            @for (int i = 0; i < 128; i++)
            @foreach (var item in Model)
            {
                int num = random.Next(0, 8);
                string newSize = sizes[num % sizes.Length];

                string size = $"game__card {newSize} show";

                <a class="game__card @(size)">
                    <h2 class="game__card__action__title">Play</h2>
                    <div class="game__card__player__info">
                        <span class="game__card__label">Level 13</span>
                        <div class="game__card__avatar">Circle Image</div>
                        <span class="game__card__label">5,312 points</span>
                    </div>
                    <div class="game__card__game__info">
                        <h2 class="game__card__player__name">John Doe</h2>
                                                <p class="game__card__game__description">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>
                     <p class="game__card__game__description">@item.omschrijving</p>
                        <div class="game__card__game__achievements">
                            <div>
                                <h6>Wins</h6>
                                <span class="material-icons">emoji_events</span>
                                <p>2</p>
                            </div>
                            <div>
                                <h6>Losses</h6>
                                <span class="material-icons">trending_down</span>
                                <p>27</p>
                            </div>
                            <div>
                                <h6>Draws</h6>
                                <span class="material-icons">handshake</span>
                                <p>27</p>
                            </div>
                        </div>
                    </div>
                    <span class="game__card__from">asdf</span> 
                </a>
            }
        </div>
    </div>
}
else
{
    <div class="nothingfound">
        <h1 class="nothingfound__message">Geen openstaande reversi spellen gevonden.</h1>
    </div>
}

@*<h1>Openstaande Spellen</h1>
    <hr />

    <p>
        <a asp-action="Create">Zelf een potje Reversi beginnen!</a>
    </p>
    <hr />

    @if (Model != null)
    {
        <table>
            <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.omschrijving)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.token)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.speler1Token)
                </th>
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.omschrijving)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.token)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.speler1Token)
                    </td>
                    <td>
                        <a asp-action="Waiting" asp-route-id="@item.token" class="btn btn-outline-primary ml-2">Join</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>

        @if (TempData["error"] != null && TempData["error"].ToString() == "error")
        {
            <div class="toast toast-danger" role="alert">
                <div class="toast__content">
                    <span class="material-icons">warning</span>
                    <p class="toast__message">An error occurred, please try again later.</p>
                    <button type="button" class="toast__close" data-dismiss="alert" aria-label="Close"><span class="material-icons">close</span></button>
                </div>
        
                <span class="toast__border"></span>
                <script type="text/javascript">
                    window.onload = () => {
                        const animated = document.querySelector('.toast__border');
                        const closeToastBtn = document.querySelector('.toast__close');
                
                        animated.addEventListener('animationend', () => {
                            $(".toast").animate({opactity: 0}, 1, function() {
                                $(this).hide();
                            });
                        });

                        closeToastBtn.addEventListener('click', () => {
                            $(".toast").hide();
                        });
                    }
            
                </script>
            </div>
        }
        
    } else
    {
        <h1>Geen spellen gevonden</h1>
    }*@
